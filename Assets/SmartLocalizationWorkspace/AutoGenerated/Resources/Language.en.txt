<?xml version="1.0" encoding="utf-8"?>
<root><!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
	<data name="AffSc.Lvl" xml:space="preserve">
		<value>Unlocked level(s)</value>
	</data>
	<data name="AffSc.Score" xml:space="preserve">
		<value>Total Score</value>
	</data>
	<data name="AffSc.Stars" xml:space="preserve">
		<value>Stars</value>
	</data>
	<data name="AffSc.Time" xml:space="preserve">
		<value>Total Time</value>
	</data>
	<data name="Credit.Credits" xml:space="preserve">
		<value>Graphics: pzUH (CC0)

Additionnal graphics :
(CC0) idoh40, bevouliin, mishonis
(CC-BY 3.0) 2D Retrospectives, JM.Atencia 

Graphic UI: Camtaz

Music: WrathGames Studio

Fonts: Vic Fieger, Tyler Finck, 
Tepid Monkey</value>
	</data>
	<data name="Credit.JLS" xml:space="preserve">
		<value>Developped By Nicolas Joannes</value>
	</data>
	<data name="Fin.Free.Button" xml:space="preserve">
		<value>Download Support Version</value>
	</data>
	<data name="Fin.Free.Txt" xml:space="preserve">
		<value>Thanks for playing the free version of Ninja Control !

If you want to support us, you can buy the "Support" version

-Ads free
-More levels</value>
	</data>
	<data name="Fin.Support.Txt" xml:space="preserve">
		<value>Congratulations, you overcame every obstacle on your way and have proven yourself worthy of the clan.

Thanks to you, the ninja will live other interesting adventures !

Visit our website and keep supporting us !
</value>
	</data>
	<data name="HowToPlay.EndPanel" xml:space="preserve">
		<value>End Panel</value>
	</data>
	<data name="HowToPlay.GoPanel" xml:space="preserve">
		<value>Change direction</value>
	</data>
	<data name="HowToPlay.JumpPanel" xml:space="preserve">
		<value>Jump</value>
	</data>
	<data name="HowToPlay.Score.Text" xml:space="preserve">
		<value>Finish: 500 pts

Unused Panel: 150 pts

Time Left: 100 pts/second

Coin: 150 pts

Attempt: -100 pts</value>
	</data>
	<data name="HowToPlay.Score.Title" xml:space="preserve">
		<value>Score</value>
	</data>
	<data name="HowToPlay.SlidePanel" xml:space="preserve">
		<value>Slide</value>
	</data>
	<data name="HowToPlay.Text" xml:space="preserve">
		<value>Help the ninja to reach the end of each level by placing panels to tell him where to go, when to turn or jump, etc. 

Then Press the "go" button and watch him as he follows your instructions. 

Try to find the quickest way possible !</value>
	</data>
	<data name="HowToPlay.Text2" xml:space="preserve">
		<value>The ninja turns when he meet a wall, but dies if he meets the limits of the level.

Collect coins but try to avoid spikes or falling in the water: both will kill your ninja.</value>
	</data>
	<data name="HowToPlay.Title" xml:space="preserve">
		<value>How To Play</value>
	</data>
	<data name="HowToPlay.WaitPanel" xml:space="preserve">
		<value>Wait</value>
	</data>
	<data name="Interface.Attempt" xml:space="preserve">
		<value>Attempts</value>
	</data>
	<data name="Interface.BadEnd" xml:space="preserve">
		<value>This end is not the good one...</value>
	</data>
	<data name="Interface.Coin" xml:space="preserve">
		<value>Coins</value>
	</data>
	<data name="Interface.Dead" xml:space="preserve">
		<value>You are dead...</value>
	</data>
	<data name="Interface.Drowned" xml:space="preserve">
		<value>You have drowned...</value>
	</data>
	<data name="Interface.GoLeft" xml:space="preserve">
		<value>Go Left</value>
	</data>
	<data name="Interface.GoRight" xml:space="preserve">
		<value>Go Right</value>
	</data>
	<data name="Interface.JumpLeft" xml:space="preserve">
		<value>Jump Left</value>
	</data>
	<data name="Interface.JumpRight" xml:space="preserve">
		<value>Jump Right</value>
	</data>
	<data name="Interface.Knocked" xml:space="preserve">
		<value>You are KO...</value>
	</data>
	<data name="Interface.LeftTime" xml:space="preserve">
		<value>Time Left</value>
	</data>
	<data name="Interface.OutofLevel" xml:space="preserve">
		<value>You are out of the level</value>
	</data>
	<data name="Interface.ScoreLow" xml:space="preserve">
		<value>Score too low...</value>
	</data>
	<data name="Interface.Slide" xml:space="preserve">
		<value>Slide</value>
	</data>
	<data name="Interface.Time" xml:space="preserve">
		<value>Time</value>
	</data>
	<data name="Interface.TimeOver" xml:space="preserve">
		<value>Time over!</value>
	</data>
	<data name="Interface.TotalScore" xml:space="preserve">
		<value>Total Score</value>
	</data>
	<data name="Interface.UnusedPanel" xml:space="preserve">
		<value>Unused Panel(s)</value>
	</data>
	<data name="Interface.Wait" xml:space="preserve">
		<value>Wait</value>
	</data>
	<data name="Interface.Win" xml:space="preserve">
		<value>You win!</value>
	</data>
	<data name="Level.2Mt" xml:space="preserve">
		<value>Choose wisely</value>
	</data>
	<data name="Level.AbrTer" xml:space="preserve">
		<value>Conker the Squirrel</value>
	</data>
	<data name="Level.Atrvs" xml:space="preserve">
		<value>Secret Exit</value>
	</data>
	<data name="Level.BnPlcmt" xml:space="preserve">
		<value>Pogo Stick</value>
	</data>
	<data name="Level.Cavrn" xml:space="preserve">
		<value>Down the rabbit hole</value>
	</data>
	<data name="Level.CldChp" xml:space="preserve">
		<value>The Bouncing Ferret</value>
	</data>
	<data name="Level.Cnc" xml:space="preserve">
		<value>...and out</value>
	</data>
	<data name="Level.DHtDBs" xml:space="preserve">
		<value>Parkour</value>
	</data>
	<data name="Level.DmTrn" xml:space="preserve">
		<value>U-turn</value>
	</data>
	<data name="Level.DssDss" xml:space="preserve">
		<value>Time jump</value>
	</data>
	<data name="Level.Encdr" xml:space="preserve">
		<value>Catherine Wheel</value>
	</data>
	<data name="Level.Engm" xml:space="preserve">
		<value>Riddle me this</value>
	</data>
	<data name="Level.Engrn" xml:space="preserve">
		<value>Gears</value>
	</data>
	<data name="Level.Error" xml:space="preserve">
		<value>Error!

Level don't exist!</value>
	</data>
	<data name="Level.ERythm" xml:space="preserve">
		<value>One, Two, Three</value>
	</data>
	<data name="Level.EtDx" xml:space="preserve">
		<value>Macuahuitl</value>
	</data>
	<data name="Level.Fs1Chx" xml:space="preserve">
		<value>Daffy or Bunny</value>
	</data>
	<data name="Level.FssOPc" xml:space="preserve">
		<value>Root of all evil</value>
	</data>
	<data name="Level.GdTsr" xml:space="preserve">
		<value>Money money money</value>
	</data>
	<data name="Level.GrtPrlls" xml:space="preserve">
		<value>Temple Run</value>
	</data>
	<data name="Level.HsdPt" xml:space="preserve">
		<value>Stargate</value>
	</data>
	<data name="Level.HtMrch" xml:space="preserve">
		<value>High Step</value>
	</data>
	<data name="Level.Idem" xml:space="preserve">
		<value>Déjà-vu</value>
	</data>
	<data name="Level.Insd" xml:space="preserve">
		<value>In...</value>
	</data>
	<data name="Level.JstDess" xml:space="preserve">
		<value>Floor 2</value>
	</data>
	<data name="Level.Lbyrth" xml:space="preserve">
		<value>Boing</value>
	</data>
	<data name="Level.LDxMds" xml:space="preserve">
		<value>Two Worlds</value>
	</data>
	<data name="Level.Menr" xml:space="preserve">
		<value>Go, Mill, Go!</value>
	</data>
	<data name="Level.MiniSc" xml:space="preserve">
		<value>Minimal Scene</value>
	</data>
	<data name="Level.MlnAO" xml:space="preserve">
		<value>Water Mill</value>
	</data>
	<data name="Level.Mstchs" xml:space="preserve">
		<value>Moustachios</value>
	</data>
	<data name="Level.Nmss" xml:space="preserve">
		<value>Nemesis</value>
	</data>
	<data name="Level.ObstTll" xml:space="preserve">
		<value>Over the wall</value>
	</data>
	<data name="Level.OrEBr" xml:space="preserve">
		<value>Goldfinger</value>
	</data>
	<data name="Level.OvrBt" xml:space="preserve">
		<value>Raving Rabbid</value>
	</data>
	<data name="Level.Plls" xml:space="preserve">
		<value>Giant's Causeway</value>
	</data>
	<data name="Level.PqEpq" xml:space="preserve">
		<value>Pikes Peak</value>
	</data>
	<data name="Level.Pqt" xml:space="preserve">
		<value>Spike strip</value>
	</data>
	<data name="Level.PrtFli" xml:space="preserve">
		<value>High Security</value>
	</data>
	<data name="Level.PrtMstr" xml:space="preserve">
		<value>Open the gate</value>
	</data>
	<data name="Level.PrtPlfd" xml:space="preserve">
		<value>Run Indy, run!</value>
	</data>
	<data name="Level.PsSvt" xml:space="preserve">
		<value>Not so fast</value>
	</data>
	<data name="Level.Rcrc" xml:space="preserve">
		<value>Risky Business</value>
	</data>
	<data name="Level.Rsq" xml:space="preserve">
		<value>Risks</value>
	</data>
	<data name="Level.SlPieg" xml:space="preserve">
		<value>It's a trap !</value>
	</data>
	<data name="Level.SlTrt" xml:space="preserve">
		<value>A step back</value>
	</data>
	<data name="Level.Splo" xml:space="preserve">
		<value>Spelunky</value>
	</data>
	<data name="Level.SrtDs" xml:space="preserve">
		<value>The Shelter</value>
	</data>
	<data name="Level.SrtInf" xml:space="preserve">
		<value>Fly you, fools!</value>
	</data>
	<data name="Level.StFoi" xml:space="preserve">
		<value>Leap of Faith</value>
	</data>
	<data name="Level.SvrFl" xml:space="preserve">
		<value>Ariadne's Thread</value>
	</data>
	<data name="Level.TmbRd" xml:space="preserve">
		<value>Tomb Raider</value>
	</data>
	<data name="Level.Tmg" xml:space="preserve">
		<value>Red Light/Green Light</value>
	</data>
	<data name="Level.TpsSpl" xml:space="preserve">
		<value>Oldies but goodies</value>
	</data>
	<data name="Level.TrnMln" xml:space="preserve">
		<value>Hot Wheels</value>
	</data>
	<data name="Level.Trnqt" xml:space="preserve">
		<value>Otherside</value>
	</data>
	<data name="Level.TrvCle" xml:space="preserve">
		<value>Ninja's diagonal</value>
	</data>
	<data name="Level.TtOFd" xml:space="preserve">
		<value>Secret Hideout</value>
	</data>
	<data name="Level.TutoPltfrm" xml:space="preserve">
		<value>Not yet... Now!</value>
	</data>
	<data name="Level.TutoSld" xml:space="preserve">
		<value>Banzai!</value>
	</data>
	<data name="Level.TutoSt" xml:space="preserve">
		<value>Jump!</value>
	</data>
	<data name="Level.VlHt" xml:space="preserve">
		<value>Triple jump</value>
	</data>
	<data name="Menu.Cheat.Enable" xml:space="preserve">
		<value>Cheats Enabled</value>
	</data>
	<data name="Menu.Credits.Title" xml:space="preserve">
		<value>Credits</value>
	</data>
	<data name="Menu.FX" xml:space="preserve">
		<value>Effects</value>
	</data>
	<data name="Menu.Language" xml:space="preserve">
		<value>Language:</value>
	</data>
	<data name="Menu.Lvl" xml:space="preserve">
		<value>Level</value>
	</data>
	<data name="Menu.Music" xml:space="preserve">
		<value>Music</value>
	</data>
	<data name="Menu.Options.Title" xml:space="preserve">
		<value>Options</value>
	</data>
	<data name="Menu.Play" xml:space="preserve">
		<value>Play</value>
	</data>
	<data name="Menu.Score.Title" xml:space="preserve">
		<value>Scores</value>
	</data>
	<data name="Menu.Volume" xml:space="preserve">
		<value>Volume</value>
	</data>
	<data name="Options.Confirm.DelSave" xml:space="preserve">
		<value>Do you want to delete all saves, highscores, settings and unlocked levels? (Menu will be reloaded)</value>
	</data>
	<data name="Options.DelSave" xml:space="preserve">
		<value>Delete Save</value>
	</data>
	<data name="Reload.Reload" xml:space="preserve">
		<value>Reload all 
(remove all panels, replace the ninja and reset attempts)</value>
	</data>
	<data name="Reload.Replace" xml:space="preserve">
		<value>Just Replace the Ninja and let panels
(Add One Attempt)</value>
	</data>
	<data name="Reload.Text" xml:space="preserve">
		<value>What do you want to do?</value>
	</data>
	<data name="ReturnMenu.Text" xml:space="preserve">
		<value>Do you want to return to the menu?</value>
	</data>
	<data name="Story.Text" xml:space="preserve">
		<value>Welcome, ninja apprentice

The Clan needs agile and fast ninjas. You must finish each stage as quick as possible.

Our clan also needs money to survive. Collect it as much as you can.

Good Luck !</value>
	</data>
	<data name="Tuto.AutoDoor.Text" xml:space="preserve">
		<value>The doors will open an close rythmically: find the perfect time window to pass !</value>
	</data>
	<data name="Tuto.Coins.Text" xml:space="preserve">
		<value>You can't always collect all the coins.

Some might be a trap...</value>
	</data>
	<data name="Tuto.Jump.ActionPanel" xml:space="preserve">
		<value>Action Panel</value>
	</data>
	<data name="Tuto.Jump.EndPanel" xml:space="preserve">
		<value>End Panel</value>
	</data>
	<data name="Tuto.Jump.LaunchButton" xml:space="preserve">
		<value>Launch Button</value>
	</data>
	<data name="Tuto.Jump.Text" xml:space="preserve">
		<value>Place an action panel to jump over the water and reach the end panel.

Take coins to improve your score.

Launch the ninja with the launch button.</value>
	</data>
	<data name="Tuto.Moulin.Text" xml:space="preserve">
		<value>The pikes on the wheels are lethal... if that was not obvious enough.

The arrow indicates the direction of rotation.</value>
	</data>
	<data name="Tuto.Platform.LaunchText" xml:space="preserve">
		<value>Moving Platform</value>
	</data>
	<data name="Tuto.Platform.Text" xml:space="preserve">
		<value>Use the "Wait" panel to time your jump on the moving platform.

Nothing will move before the ninja is.</value>
	</data>
	<data name="Tuto.Portes.Text" xml:space="preserve">
		<value>Blue boutons open doors.

The arrow indicates the way the door will open.</value>
	</data>
	<data name="Tuto.Precision.Text" xml:space="preserve">
		<value>Jumping requires precision, so the pannels needs to be perfectly placed to reach the end.</value>
	</data>
	<data name="Tuto.RedB.Text" xml:space="preserve">
		<value>Red buttons trigger traps.</value>
	</data>
	<data name="Tuto.Risk.Text" xml:space="preserve">
		<value>The panels can't be placed on the traps.

But remember that the risk pays off !</value>
	</data>
	<data name="Tuto.Slide.Text" xml:space="preserve">
		<value>Use the slide panel to... slide under obstacles.</value>
	</data>
	<data name="Tuto.SlidPl.Text" xml:space="preserve">
		<value>When the sky falls, you can let slide.</value>
	</data>
	<data name="Tuto.Timer.Text" xml:space="preserve">
		<value>You can ask the ninja to stop and wait.

Click to add seconds (1-5) to the panel.</value>
	</data>
	<data name="Tuto.UTurn.Text" xml:space="preserve">
		<value>Ninja must turn before going out the level.

He turns automatically on wall.</value>
	</data>
</root>